{"version":3,"sources":["function/api/checkFetchData.js","function/api/API.js","clasess/models/Input.js","clasess/models/Select.js","clasess/modules/ClassModal.js","clasess/models/Textarea.js","clasess/modules/Form.js","clasess/modules/sendDataFormOnServer.js","function/views/visitsView.js","function/filters/filters.js","clasess/modules/visitsModel.js","clasess/modules/getVisitsFromServer.js","clasess/modules/Layout.js","scripts/index.js"],"names":["checkFetchData","res","ok","text","then","error","e","Error","data","_checkFetchData","require","LINK","cards","login","authorization","Authorization","localStorage","getItem","undefined","auth","user","fetch","method","headers","body","JSON","stringify","getCards","r","json","getOneCards","ip","addCard","cardObj","delCards","changeCard","changeObj","response","_default","exports","default","Input","constructor","type","styleCss","name","label","value","classCss","render","formLogin","elem1","elem2","Select","stringValues","urgency","classSelect","resultStr","split","reduce","prev","next","Modal","title","content","selector","renderModal","document","querySelector","insertAdjacentHTML","Textarea","rows","cols","class","_Input","_Select","_Textarea","Form","makeHtmlStr","arr","forEach","input","inputs","form","formInputs","querySelectorAll","addEventListener","event","preventDefault","remove","formInput","console","log","createElement","className","innerHTML","parentElement","insertBefore","FormCardiologist","cardiologistInputs","FormDentist","dentistInputs","FormTherapist","therapistInputs","_getVisitsFromServer","_Layout","_filters","_scripts","_API","_interopRequireDefault","obj","__esModule","cardObjCreate","modal","card","formData","FormData","key","entries","API","reset","createVisitForView","parse","visitLayout","arrayVisitsView","click","cardObjEdit","id","getElementById","elementDeleteINArray","_sendDataFormOnServer","visitOneView","visit","Object","keys","length","append","renderCard","visitsView","visitsArray","visitHTML","item","onclick","button","closest","classList","toggle","shoowInput","renderInput","rest","date","description","fullName","map","join","renderForm","arg","editID","elem","style","display","doctor","dateOfLastVisit","inputData","age","bodyMass","disease","pressure","_visitsView","STATUS_FILTER","PRIORITY_FILTER","filterArray","outputGoods","goods","html","option","renderFilters","status","priority","search","toString","toLowerCase","background","currentDate","Date","getTime","filter","n","includes","Visit","deleteVisit","parent","deleteID","target","editVisit","addEvents","parentCard","add","visitOption","VisitCardiologist","weight","VisitDentist","VisitTherapist","_visitsModel","getVisits","responses","object","push","findDoctor","_ClassModal","_Form","init","buttonEnter","newForm","renderModalform","responseEnter","submit","email","password","token","setItem","catch","buttonCreateVisit","btnExit","selectDoctor","exit","additionalForm","enterAdd","SiblingsInput","formValid","removeItem","location","reload","array","i","splice"],"mappings":"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","file":"scripts.8e6a284f.js","sourceRoot":"..","sourcesContent":["export function checkFetchData(res) {\r\n  if (res.ok) {\r\n    return res.text();\r\n  }\r\n  return res.text().then((error) => {\r\n    const e = new Error(\"Упс  , что то пошло не так...\");\r\n    e.data = error;\r\n    throw e;\r\n  });\r\n}\r\n","import { checkFetchData } from \"./checkFetchData\";\r\n\r\nconst LINK = {\r\n  cards: \"https://ajax.test-danit.com/api/v2/cards\",\r\n  login: \"https://ajax.test-danit.com/api/v2/cards/login\",\r\n};\r\n\r\nfunction authorization() {\r\n  return {\r\n    \"Content-type\": \"application/json\",\r\n    Authorization: localStorage.getItem(\"token\")\r\n      ? `Bearer ${localStorage.getItem(\"token\")}`\r\n      : undefined,\r\n  };\r\n}\r\nconst auth = (user) => {\r\n  return fetch(LINK.login, {\r\n    method: \"POST\",\r\n    headers: authorization(),\r\n    body: JSON.stringify(user),\r\n  });\r\n};\r\n\r\nconst getCards = () => {\r\n  return fetch(LINK.cards, {\r\n    headers: authorization(),\r\n  }).then((r) => r.json());\r\n};\r\n\r\nconst getOneCards = (ip) => {\r\n  return fetch(`${LINK.cards}/${ip}`, {\r\n    method: \"GET\",\r\n    headers: authorization(),\r\n  });\r\n};\r\n\r\nconst addCard = (cardObj) => {\r\n  return fetch(LINK.cards, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(cardObj),\r\n    headers: authorization(),\r\n  }).then((r) => checkFetchData(r));\r\n};\r\n\r\nconst delCards = (ip) => {\r\n  return fetch(`${LINK.cards}/${ip}`, {\r\n    method: \"DELETE\",\r\n    headers: authorization(),\r\n  });\r\n};\r\n\r\nfunction changeCard(ip, changeObj) {\r\n  return fetch(`${LINK.cards}/${ip}`, {\r\n    method: \"PUT\",\r\n    headers: authorization(),\r\n    body: JSON.stringify(changeObj),\r\n  })\r\n    .then((res) => res.text())\r\n    .then((response) => response);\r\n}\r\n\r\nexport default {\r\n  getOneCards,\r\n  changeCard,\r\n  delCards,\r\n  auth,\r\n  getCards,\r\n  addCard,\r\n  authorization,\r\n};\r\n","\r\nclass Input {\r\n  constructor(type, styleCss, name, label,value) {\r\n    this.type = type;\r\n    this.classCss = styleCss;\r\n    this.name = name;\r\n    this.label = label;\r\n    this.value=value||\"\";\r\n  }\r\n\r\n  render() {\r\n    return `<label  class=\"form-label clear\">${this.label}</label>\r\n<input value=\"${this.value}\" type=${this.type} class=\"clear ${this.classCss}\" name=${this.name}>`;\r\n  }\r\n}\r\n\r\nconst formLogin = () => {\r\n  const elem1 = new Input(\"email\", \"form-control\", \"email\", \"Емейл\");\r\n  const elem2 = new Input(\"password\", \"form-control\", \"password\", \"Пароль\");\r\n  return `<form>${elem1.render()} ${elem2.render()}</form>`;\r\n};\r\n\r\nexport { Input, formLogin };\r\n\r\n","class Select {\r\n    constructor(classCss, name, stringValues, urgency) {\r\n        this.classSelect = classCss;\r\n        this.name = name;\r\n        this.stringValues = stringValues;\r\n        this.urgency = urgency || \"\";\r\n    }\r\n\r\n    render() {\r\n        const arrayString = this.stringValues.split(\",\");\r\n        const resultStr = arrayString.reduce((prev, next) => {\r\n            return prev + ` <option ${this.urgency !== next ? \"\" : \"selected\"} value=\"${next}\">${next}</option>`\r\n        }, \"\")\r\n\r\n        \r\n        return `<select   class=\" ${this.classSelect}\" name=${this.name} >\r\n            ${resultStr}\r\n        </select>\r\n`;\r\n    }\r\n}\r\n\r\nexport {Select};\r\n","class Modal {\r\n  constructor(title, content, selector) {\r\n    this.selector = selector;\r\n    this.title = title;\r\n    this.content = content;\r\n  }\r\n  renderModal() {\r\n    const modal = document.querySelector(this.selector);\r\n    modal.insertAdjacentHTML(\r\n      \"afterbegin\",\r\n      `\r\n            <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">${this.title}</h5>\r\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                  </div>\r\n                  <form id=\"form\"><div class=\"modal-body\">\r\n                  ${this.content}\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" id=\"submit\" class=\"btn btn-primary\">Отправить</button>\r\n                  </div></form>\r\n                </div>\r\n              </div>\r\n     </div>`\r\n    );\r\n  }\r\n}\r\n\r\nexport { Modal };\r\n","class Textarea {\r\n  constructor(rows, cols, name, label, classCss) {\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.name = name;\r\n    this.label = label;\r\n    this.class = classCss;\r\n  }\r\n  render() {\r\n    return `  <label  class=\"form-label clear \">${this.label}</label>\r\n  <textarea class=\"form-control clear\" rows=${this.rows} class=${this.class} cols=${this.cols} name=${this.name}></textarea>`;\r\n  }\r\n}\r\n\r\nexport { Textarea };\r\n","import { Input } from \"../models/Input\";\r\nimport { Select } from \"../models/Select\";\r\nimport { Textarea } from \"../models/Textarea\";\r\n\r\nclass Form {\r\n  constructor() {}\r\n  makeHtmlStr(arr) {\r\n    let resultStr = \"\";\r\n    arr.forEach((input) => (resultStr += input.render()));\r\n    return resultStr;\r\n  }\r\n  render() {\r\n    const inputs = [\r\n      new Select(\r\n        \"form-select clear\",\r\n        \"urgency\",\r\n        \"Срочность,Обычная,Приоритетная,Неотложная\"\r\n      ),\r\n      new Input(\"text\", \"form-control\", \"title\", \"Введите цель визита\"),\r\n      new Input(\r\n        \"text\",\r\n        \"form-control\",\r\n        \"fullName\",\r\n        \"Введите Фамилию Имя Отчество\"\r\n      ),\r\n      new Textarea(\r\n        \"5\",\r\n        \"58\",\r\n        \"description\",\r\n        \"Краткое описание визита\",\r\n        \"clear\"\r\n      ),\r\n    ];\r\n\r\n    return `\r\n<div> \r\n${this.makeHtmlStr(inputs)}\r\n</div>\r\n`;\r\n  }\r\n\r\n  static formValid() {\r\n    const form = document.querySelector(\"#form\");\r\n\r\n    const formInputs = document.querySelectorAll(\".form-control\");\r\n\r\n    form.addEventListener(\"submit\", function (event) {\r\n      event.preventDefault();\r\n      const errors = form.querySelectorAll(\".error\");\r\n      errors.forEach(error=>error.remove())\r\n      formInputs.forEach(formInput=>{\r\n        if (!formInput.value) {\r\n          console.log(formInput);\r\n          const error = document.createElement(\"div\");\r\n          error.className = \"error\";\r\n          error.innerHTML = `Не заповнене поле - ${formInput.name}`;\r\n          formInput.parentElement.insertBefore(error, formInput);\r\n        }\r\n      })\r\n\r\n    });\r\n  }\r\n}\r\n\r\nclass FormCardiologist extends Form {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    const cardiologistInputs = [\r\n      new Input(\"date\", \"form-control\", \"date\", \"Введите дату визита \"),\r\n      new Input(\r\n        \"text\",\r\n        \"form-control\",\r\n        \"pressure\",\r\n        \"Введите давление в формате XXX/XX\"\r\n      ),\r\n      new Input(\"text\", \"form-control\", \"bodyMass\", \"Введите массу тела\"),\r\n      new Input(\r\n        \"text\",\r\n        \"form-control\",\r\n        \"disease\",\r\n        \"Введите перенесенные заболевания сердечно-сосудистой системы\"\r\n      ),\r\n      new Input(\"text\", \"form-control\", \"age\", \"Введите возраст пациента\"),\r\n    ];\r\n\r\n    return `\r\n<div>\r\n${this.makeHtmlStr(cardiologistInputs)}\r\n\r\n</div>\r\n\r\n`;\r\n  }\r\n}\r\n\r\nclass FormDentist extends Form {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    const dentistInputs = [\r\n      new Input(\"date\", \"form-control\", \"date\", \"Введите дату визита \"),\r\n      new Input(\r\n        \"date\",\r\n        \"form-control\",\r\n        \"dateOfLastVisit\",\r\n        \"Введите дату последнего визита \"\r\n      ),\r\n    ];\r\n\r\n    return `\r\n    <div>\r\n    ${this.makeHtmlStr(dentistInputs)}\r\n    </div>\r\n`;\r\n  }\r\n}\r\n\r\nclass FormTherapist extends Form {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    const therapistInputs = [\r\n      new Input(\"date\", \"form-control\", \"date\", \"Введите дату визита \"),\r\n      new Input(\"text\", \"form-control\", \"age\", \"Введите возраст пациента\"),\r\n    ];\r\n\r\n    return `\r\n${this.makeHtmlStr(therapistInputs)}\r\n`;\r\n  }\r\n}\r\n\r\nexport { Form, FormCardiologist, FormDentist, FormTherapist };\r\n","import { createVisitForView } from \"./getVisitsFromServer\";\r\nimport { newForm } from \"./Layout\";\r\n\r\nimport { visitLayout } from \"../../function/filters/filters\";\r\nimport { arrayVisitsView, elementDeleteINArray } from \"../../scripts\";\r\nimport API from \"../../function/api/API\";\r\n\r\n//Функция формирования обьекта запроса\r\n//Функция отправки запроса на создание визита на серевере + получение ответа сервера\r\n\r\nfunction cardObjCreate() {\r\n  const modal = document.querySelector(\".btn-close\");\r\n  const form = document.querySelector(\"#form\");\r\n  const card = {};\r\n  form.addEventListener(\"submit\", (e) => {\r\n    const formData = new FormData(form);\r\n    for (let [key, value] of formData.entries()) {\r\n      card[key] = value;\r\n      if (value === \"\") {\r\n        return false;\r\n      }\r\n    }\r\n    API.addCard(card).then((res) => {\r\n      form.reset();\r\n      createVisitForView(JSON.parse(res));\r\n      visitLayout(arrayVisitsView);\r\n    });\r\n    modal.click();\r\n  });\r\n}\r\n\r\nfunction cardObjEdit(id) {\r\n  const form = document.getElementById(`form__edit_${id}`);\r\n  let cardObj = {};\r\n  const formData = new FormData(form);\r\n\r\n  for (let [key, value] of formData.entries()) {\r\n    cardObj[key] = value;\r\n    if (value === \"\") {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  API.changeCard(id, cardObj)\r\n    .then((response) => {\r\n      return JSON.parse(response);\r\n    })\r\n    .then((res) => {\r\n      elementDeleteINArray(arrayVisitsView, res.id);\r\n      createVisitForView(res);\r\n      visitLayout(arrayVisitsView);\r\n    });\r\n}\r\n\r\nexport { cardObjCreate };\r\nexport { cardObjEdit };\r\n","import {cardObjEdit} from \"../../clasess/modules/sendDataFormOnServer\";\r\nimport {visitLayout} from \"../filters/filters\";\r\nimport {arrayVisitsView} from \"../../scripts\";\r\nimport {Select} from \"../../clasess/models/Select\";\r\nimport {Input} from \"../../clasess/models/Input\";\r\n\r\nfunction visitOneView(visit) {\r\n    //? перевірка обєкта на пустоту\r\n    if (Object.keys(visit).length == 0) {\r\n        return;\r\n    }\r\n    let visitHTML = document.querySelector(\".visits__item-wrapper\");\r\n    //? передається об'єкт і визивається метод рендера для нього.\r\n    visitHTML.append(visit.renderCard(visit));\r\n}\r\n\r\nfunction visitsView(visitsArray) {\r\n    let visitHTML = document.querySelector(\".visits__item-wrapper\");\r\n    visitHTML.innerHTML = \"\";\r\n\r\n    if (!visitsArray.length) {\r\n        visitHTML.insertAdjacentHTML(\"afterbegin\", `<h2>No items have been added</h2>`,);\r\n    } else {\r\n        visitsArray.forEach((visit) => {\r\n            visitOneView(visit);\r\n        });\r\n    }\r\n\r\n//? покращив метод замість навішування слухачів навісив onclick\r\n    const items = document.querySelectorAll(\".button__more\");\r\n    items.forEach((item) => (item.onclick = () => shoowInput(item)));\r\n\r\n    function shoowInput(button) {\r\n        const visitCard = button.closest(\".visit__item\");\r\n        const visitOption = visitCard.querySelector(\".visit__option\");\r\n\r\n        visitOption.classList.toggle(\"visible\");\r\n        button.value = button.value === \"Скрыть\" ? \"Показать больше\" : \"Скрыть\";\r\n    }\r\n}\r\nfunction renderInput (arr,...rest) {\r\n    const [date,title,description,fullName]=rest\r\n    const renderArr = [{type: \"date\", name: \"date\", label: \"Введите дату визита\", value: date}, {\r\n        type: \"text\", name: \"title\", label: \"Введите цель визита\", value: title,\r\n    }, {\r\n        type: \"text\", name: \"description\", label: \"Введите краткое описание визита\", value: description,\r\n    }, {\r\n        type: \"text\", name: \"fullName\", label: \"Введите Фамилию Имя Отчество\", value: fullName,\r\n    },...arr]\r\n   return  renderArr.map(({\r\n                       type,\r\n                       name,\r\n                       label,\r\n                       value\r\n                   }) => new Input(type, \"form-control clear\", name, label, value).render()).join(\"\")\r\n}\r\n\r\nfunction renderForm(arg, editID) {\r\n    const elem = document.getElementById(`${editID}`);\r\n    const form = document.getElementById(`test${editID}`);\r\n    elem.style.display = \"none\";\r\n    if (arg.doctor === \"Стоматолог\") {\r\n        const {\r\n            doctor, id, urgency, date, title, description, dateOfLastVisit, fullName,\r\n        } = arg;\r\n        const inputData = [ {\r\n            type: \"date\", name: \"dateOfLastVisit\", label: \"Введите дату последнего посещения\", value: dateOfLastVisit,\r\n        }]\r\n\r\n\r\n        form.insertAdjacentHTML(\"beforebegin\", `\r\n                            <h4>Визит к ${doctor}у</h4>\r\n                            <form id=\"form__edit_${id}\">\r\n                            <select id=\"selectDoctors\"  class=\"form-select\"  style=\"display: none\" name=\"doctor\" aria-label=\"Default select example\">\r\n                              <option value=\"Стоматолог\" selected>Стоматолог</option>\r\n                            </select>\r\n                            ${new Select(\"form-select clear\", \"urgency\", \"Срочность,Обычная,Приоритетная,Неотложная\",urgency).render()}\r\n                           ${renderInput(inputData,date,title,description,fullName)}\r\n                          \r\n                          </form>\r\n                         <button  class=\"button__edit\">Сохранить изменения</button>\r\n                         <button  class=\"button__undo\">Отмена</button>\r\n                        `,);\r\n    }\r\n    if (arg.doctor === \"Кардиолог\") {\r\n        const {\r\n            age, id, bodyMass, date, description, disease, doctor, fullName, pressure, title, urgency,\r\n        } = arg;\r\n       const inputData =  [{\r\n           type: \"text\", name: \"pressure\", label: \"Введите давление в формате XXX/XX\", value: pressure,\r\n       },{\r\n           type: \"text\", name: \"bodyMass\", label: \"Введите массу тела\", value: bodyMass,\r\n       },{\r\n           type: \"text\", name: \"disease\", label: \"Введите перенесенные заболевания сердечно-сосудистой системы\", value: disease,\r\n       },{\r\n           type: \"text\", name: \"age\", label: \"Введите возраст пациента\", value: age,\r\n       }]\r\n        form.insertAdjacentHTML(\"afterend\", `\r\n                             <h4>Визит к ${doctor}у</h4>\r\n                            <form id=\"form__edit_${id}\">\r\n                            <select id=\"selectDoctors\"  class=\"form-select\" style=\"display: none\" name=\"doctor\" aria-label=\"Default select example\">\r\n                              <option value=\"Кардиолог\" selected>Кардиолог</option>\r\n                            </select>\r\n                            ${new Select(\"form-select clear\", \"urgency\", \"Срочность,Обычная,Приоритетная,Неотложная\",urgency).render()}\r\n                           ${renderInput(inputData,date,title,description,fullName)}\r\n                            \r\n                            </form>\r\n                        <button  class=\"button__edit\">Сохранить изменения</button>\r\n                        <button  class=\"button__undo\">Отмена</button>\r\n                        `,);\r\n    }\r\n    if (arg.doctor === \"Терапевт\") {\r\n        const {age, id, date, description, doctor, fullName, title, urgency} = arg;\r\nconst inputData  = [{\r\n    type: \"text\", name: \"age\", label: \"Введите возраст пациента\", value: age,\r\n}]\r\n        form.insertAdjacentHTML(\"afterend\", `\r\n                              <h4>Визит к ${doctor}у</h4>\r\n                            <form id=\"form__edit_${id}\">\r\n                            <select id=\"selectDoctors\"  class=\"form-select\" style=\"display: none\" name=\"doctor\" aria-label=\"Default select example\">\r\n                              <option value=\"Терапевт\" selected>Терапевт</option>\r\n                            </select>\r\n                            ${new Select(\"form-select clear\", \"urgency\", \"Срочность,Обычная,Приоритетная,Неотложная\", urgency).render()}\r\n                             ${renderInput(inputData, date, title, description, fullName)}\r\n                            </form>\r\n                      <button  class=\"button__edit\">Сохранить изменения</button>\r\n                      <button  class=\"button__undo\">Отмена</button>\r\n                        `,);\r\n    }\r\n    form.parentElement\r\n        .querySelector(\".button__edit\")\r\n        .addEventListener(`click`, () => {\r\n            cardObjEdit(editID);\r\n        });\r\n\r\n    form.parentElement\r\n        .querySelector(\".button__undo\")\r\n        .addEventListener(`click`, () => {\r\n            visitLayout(arrayVisitsView);\r\n        });\r\n}\r\n\r\n\r\nexport {visitsView};\r\nexport {visitOneView};\r\nexport {renderForm};\r\n","import { visitsView } from \"../views/visitsView\";\r\n\r\nconst STATUS_FILTER = [\"All\", \"open\", \"done\"];\r\nconst PRIORITY_FILTER = [\"All\", \"Неотложная\", \"Приоритетная\", \"Обычная\"];\r\n\r\n// Рендер страницы с формами и списком выбора фильтра\r\nfunction visitLayout(filterArray) {\r\n  function renderFilters() {\r\n    // Рендер страницы с формами\r\n    let html = '<div><div class=\"filters-header\" id=\"filtersHeader\">';\r\n\r\n    html += `<div class=\"container\"><div class=\"row\">\r\n                <div class=\"col-sm\">\r\n                    <label class=\"status-label\">Status:</label>\r\n                        <select class=\"form-select\" id=\"status-filter\">\r\n                                    ${STATUS_FILTER.map(\r\n                                      (option) => `\r\n                            <option value=\"${option}\">${option}</option>`\r\n                                    )}\r\n                        </select>\r\n                </div>`;\r\n\r\n    html += `<div class=\"col-sm\">\r\n                <label class=\"status-label\">Priority:</label>\r\n                <select class=\"form-select\" id=\"priority-filter\">\r\n                           ${PRIORITY_FILTER.map(\r\n                             (option) => `\r\n                    <option value=\"${option}\">\r\n                        ${option}\r\n                    </option>`\r\n                           )}\r\n                </select>\r\n             </div>`;\r\n\r\n    html += `<div class=\"search col-sm\">\r\n                <label for=\"session-search\" class=\"form-label\">Search:</label>\r\n                <input class=\"search-input\" id=\"cardsSearch\" type=\"search\" value=\"\" />\r\n             </div>`;\r\n\r\n    html += \"</div></div>\";\r\n\r\n    document.querySelector(\".filters\").innerHTML = html;\r\n  }\r\n\r\n  renderFilters();\r\n\r\n  // Фильтр\r\n  const filter = document.getElementById(\"filtersHeader\");\r\n  filter.addEventListener(\"input\", statusGoods);\r\n  outputGoods(filterArray); // запуск функции для начального отображения\r\n\r\n  function statusGoods() {\r\n    let status = document.getElementById(\"status-filter\").value;\r\n    let priority = document.getElementById(\"priority-filter\").value;\r\n    const search = document\r\n      .getElementById(\"cardsSearch\")\r\n      .value.toString()\r\n      .toLowerCase();\r\n\r\n    // Проверка на наличие текста и если текст есть, то картинку не показывать\r\n    if (search !== \"\") {\r\n      document.getElementById(\"cardsSearch\").style.background = \"none\";\r\n    } else {\r\n      document.getElementById(\"cardsSearch\").style.background =\r\n        \"url(https://img.icons8.com/plasticine/30/000000/google-web-search.png) no-repeat\";\r\n    }\r\n\r\n    let currentDate = new Date().getTime();\r\n\r\n    outputGoods(\r\n      filterArray.filter(\r\n        (n) =>\r\n          (priority === \"All\" || n.urgency === priority) && // фильтр по приоритету\r\n          (status === \"All\" || // фильтр по статусу\r\n            (new Date(n.date).getTime() < currentDate && status === \"done\") ||\r\n            (new Date(n.date).getTime() > currentDate && status === \"open\")) && // фильтр по вводу текста\r\n          (n.doctor.toLowerCase().includes(search) ||\r\n            n.description.toLowerCase().includes(search) ||\r\n            n.fullName.toLowerCase().includes(search))\r\n      )\r\n    );\r\n  }\r\n\r\n  function outputGoods(goods) {\r\n    visitsView(goods);\r\n  }\r\n}\r\n\r\nexport { visitLayout };\r\n","import API from \"../../function/api/API\";\r\nimport {arrayVisitsView, elementDeleteINArray} from \"../../scripts\";\r\nimport {visitLayout} from \"../../function/filters/filters\";\r\nimport {renderForm} from \"../../function/views/visitsView\";\r\n\r\nclass Visit {\r\n    constructor({id, doctor, date, title, description, urgency, fullName}) {\r\n        this.id = id;\r\n        this.doctor = doctor;\r\n        this.date = date;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.urgency = urgency;\r\n        this.fullName = fullName;\r\n    }\r\n\r\n    deleteVisit(visit, parent) {\r\n        const deleteIcon = parent.querySelector(\".fa-trash-alt\");\r\n        deleteIcon.addEventListener(\"click\", (elem) => {\r\n            elem.preventDefault();\r\n            const deleteID = visit.id;\r\n            API.delCards(deleteID).then((res) => {\r\n                if (res.ok) {\r\n                    elem.target.closest(\".visit__item\").remove();\r\n                }\r\n            });\r\n            elementDeleteINArray(arrayVisitsView, deleteID);\r\n            visitLayout(arrayVisitsView);\r\n        });\r\n    }\r\n\r\n    editVisit(visit, parent) {\r\n        const editIcon = parent.querySelector(\".fa-edit\");\r\n        editIcon.addEventListener(\"click\", (elem) => {\r\n            elem.preventDefault();\r\n\r\n            const editID = visit.id;\r\n            renderForm(this, editID);\r\n        });\r\n    }\r\n\r\n    addEvents(visit, parent) {\r\n        this.deleteVisit(visit, parent)\r\n        this.editVisit(visit, parent)\r\n    }\r\n\r\n    renderCard(visit) {\r\n        const parentCard = document.createElement(\"div\");\r\n        parentCard.classList.add(\"visit__item\");\r\n        parentCard.insertAdjacentHTML(\"afterbegin\", `\r\n                       <div id=\"${visit.id}\">\r\n    <ul class=\"visit__base\">\r\n        <div class=\"visit__item-title\">\r\n            <div class=\"visit__base--title\" name=\"${\r\n            visit.id\r\n        }\">Visit Cards\r\n            </div>\r\n            <div class=\"edit__button\">\r\n                <i class=\"fas fa-edit\"></i>\r\n                <i class=\"fas fa-trash-alt\"></i>\r\n            </div>\r\n        </div>\r\n        <li class=\"visit__fullName\"><span class=\"span\">ФИО:</span>\r\n            <p>${\r\n            visit.fullName\r\n        }</p></li>\r\n        <li class=\"visit__doctor\"><span class=\"span\">Доктор:</span>\r\n            <p>${\r\n            visit.doctor\r\n        }</p></li>\r\n    </ul>\r\n    <input type=\"button\" value=\"Показать больше\" class=\"button__more\"></div>\r\n<ul class=\"visit__option\">\r\n    <li class=\"visit__title\"><span class=\"span\">Цель визита: </span>\r\n        <p>${\r\n            visit.title\r\n        }</p></li>\r\n    <li class=\"visit__description\"><span class=\"span\">Описание визита: </span>\r\n        <p>${\r\n            visit.description\r\n        }</p></li>\r\n    <li class=\"visit__urgency\"><span class=\"span\">Срочность: </span>\r\n        <p>${\r\n            visit.urgency\r\n        }</p></li>\r\n    <li class=\"visit__date\"><p>${\r\n            visit.date\r\n                ? `<span class=\"span\">Дата визита: </span>${visit.date}`\r\n                : \"\"\r\n        }</p></li>\r\n</ul>`)\r\n        this.deleteVisit(visit, parentCard)\r\n        this.editVisit(visit, parentCard)\r\n\r\n        const visitOption = parentCard.querySelector(\".visit__option\");\r\n        visitOption.insertAdjacentHTML(\"afterend\", `<div  id=\"test${visit.id}\"></div>`);\r\n        return visitOption;\r\n    }\r\n}\r\n\r\nclass VisitCardiologist extends Visit {\r\n    constructor({\r\n                    id,\r\n                    doctor,\r\n                    date,\r\n                    title,\r\n                    description,\r\n                    urgency,\r\n                    fullName,\r\n                    pressure,\r\n                    bodyMass,\r\n                    disease,\r\n                    age,\r\n                }) {\r\n        super({id, doctor, date, title, description, urgency, fullName});\r\n        this.pressure = pressure;\r\n        this.bodyMass = bodyMass;\r\n        this.disease = disease;\r\n        this.age = age;\r\n    }\r\n\r\n    renderCard(visit) {\r\n        const visitOption = super.renderCard(visit)\r\n        visitOption.insertAdjacentHTML(\"afterbegin\", `<li class=\"visit__pressure\"><p>${\r\n            visit.pressure\r\n                ? `<span class=\"span\">Давление: </span> ${visit.pressure}`\r\n                : \"\"\r\n        }</p></li>\r\n<li class=\"visit__weight\"><p>${\r\n            visit.weight\r\n                ? `<span class=\"span\">Вес: </span>${visit.weight}`\r\n                : \"\"\r\n        }</p></li>\r\n<li class=\"visit__disease\"><p>${\r\n            visit.disease\r\n                ? `<span class=\"span\">Перенесенные заболевания: </span>${visit.disease}`\r\n                : \"\"\r\n        }</p></li>\r\n<li class=\"visit__age\"><p>${\r\n            visit.age\r\n                ? `<span class=\"span\">Возраст: </span>${visit.age}`\r\n                : ``\r\n        }</p></li>`);\r\n\r\n        return visitOption.closest(\".visit__item\");\r\n\r\n    }\r\n}\r\n\r\nclass VisitDentist extends Visit {\r\n    constructor({\r\n                    id,\r\n                    doctor,\r\n                    date,\r\n                    title,\r\n                    description,\r\n                    urgency,\r\n                    fullName,\r\n                    dateOfLastVisit,\r\n                }) {\r\n        super({id, doctor, date, title, description, urgency, fullName});\r\n        this.dateOfLastVisit = dateOfLastVisit;\r\n    }\r\n\r\n    renderCard(visit) {\r\n        const visitOption = super.renderCard(visit)\r\n        visitOption.insertAdjacentHTML(\"afterbegin\", `<li className=\"visit__date\"><p>${\r\n            visit.dateOfLastVisit\r\n                ? `<span class=\"span\">Последний визит: </span>${visit.dateOfLastVisit}`\r\n                : \"\"\r\n        }</p></li>`);\r\n\r\n        return visitOption.closest(\".visit__item\");;\r\n\r\n    }\r\n\r\n}\r\n\r\nclass VisitTherapist extends Visit {\r\n    constructor({\r\n                    id,\r\n                    doctor,\r\n                    date,\r\n                    title,\r\n                    description,\r\n                    urgency,\r\n                    fullName,\r\n                    age,\r\n                }) {\r\n        super({id, doctor, date, title, description, urgency, fullName});\r\n        this.age = age;\r\n    }\r\n    renderCard(visit) {\r\n        const visitOption = super.renderCard(visit)\r\n        visitOption.insertAdjacentHTML(\"afterbegin\", `   <li class=\"visit__age\"><p>${\r\n            visit.age\r\n                ? `<span class=\"span\">Возраст: </span>${visit.age}`\r\n                : ``\r\n        }</p></li>`);\r\n\r\n        return visitOption.closest(\".visit__item\");;\r\n\r\n    }\r\n}\r\n\r\nexport {Visit};\r\nexport {VisitCardiologist};\r\nexport {VisitDentist};\r\nexport {VisitTherapist};\r\n","import API from \"../../function/api/API\";\r\nimport { visitLayout } from \"../../function/filters/filters\";\r\nimport { arrayVisitsView } from \"../../scripts\";\r\nimport { VisitCardiologist, VisitDentist, VisitTherapist } from \"./visitsModel\";\r\n\r\nfunction getVisits() {\r\n  API.getCards().then((responses) => {\r\n    responses.forEach((response) => {\r\n      createVisitForView(response);\r\n    });\r\n    visitLayout(arrayVisitsView);\r\n  });\r\n}\r\n\r\nfunction createVisitForView(object) {\r\n  //создает обьект согласно нужного класса. Добавялет обьект в массив для отображения\r\n\r\n  const findDoctor  =(object)=>{\r\n    console.log(object)\r\n    switch (object.doctor) {\r\n      case \"Стоматолог\":return new VisitDentist(object);\r\n      case \"Кардиолог\":return new VisitCardiologist(object);\r\n      case \"Терапевт\":return new VisitTherapist(object);\r\n    }\r\n    return {}\r\n  }\r\n\r\n  arrayVisitsView.push(findDoctor(object));\r\n}\r\n\r\nexport { getVisits };\r\nexport { createVisitForView };\r\n","import API from \"../../function/api/API\";\r\nimport { checkFetchData } from \"../../function/api/checkFetchData\";\r\nimport { formLogin } from \"../models/Input\";\r\nimport { Select } from \"../models/Select\";\r\nimport { Modal } from \"./ClassModal\";\r\nimport { Form, FormCardiologist, FormDentist, FormTherapist } from \"./Form\";\r\nimport { getVisits } from \"./getVisitsFromServer\";\r\nimport { cardObjCreate } from \"./sendDataFormOnServer\";\r\n\r\nexport const init = () => {\r\n  const buttonEnter = document.querySelector(\"#button-enter\");\r\n  if (localStorage.getItem(\"token\")) {\r\n    buttonEnter.remove();\r\n\r\n    newForm();\r\n    getVisits();\r\n  } else {\r\n    document\r\n      .querySelector(\".visits__item-wrapper\")\r\n      .insertAdjacentHTML(\"afterbegin\", `<h2>No items have been added</h2>`);\r\n    renderModalform();\r\n    responseEnter();\r\n  }\r\n};\r\n\r\n//форма авторизации\r\nexport function renderModalform() {\r\n  const modalLogin = new Modal(\"Войти\", formLogin(), \".header\");\r\n  modalLogin.renderModal();\r\n}\r\n\r\n// отправка запроса авторизации\r\nexport function responseEnter() {\r\n  const submit = document.getElementById(\"submit\");\r\n  const modal = document.querySelector(\".btn-close\");\r\n  const email = document.querySelector('[name=\"email\"]');\r\n  const password = document.querySelector('[name=\"password\"]');\r\n  submit.addEventListener(\"click\", () => {\r\n    API.auth({\r\n      email: email,\r\n      password: password,\r\n    })\r\n      .then((res) => {\r\n        return checkFetchData(res);\r\n      })\r\n      .then((token) => {\r\n        console.log(token);\r\n        localStorage.setItem(\"token\", `${token}`);\r\n        modal.click();\r\n        init();\r\n      })\r\n      .catch((e) => checkFetchData(e));\r\n  });\r\n}\r\n\r\n// создаем форму в модальном окне и выводим туда список выбора докторов\r\nexport function newForm() {\r\n  const buttonCreateVisit = document.querySelector(\".header\");\r\n  const btnExit = document.querySelector(\".btn-exit\");\r\n\r\n  const selectDoctor = new Select(\r\n    \"form-select \",\r\n    \"doctor\",\r\n    \"Выбор Врача,Кардиолог,Стоматолог,Терапевт\",\r\n  );\r\n\r\n  new Modal(\"Создать Визит\", selectDoctor.render(), \".header\").renderModal();\r\n\r\n  if (!btnExit) {\r\n    buttonCreateVisit.insertAdjacentHTML(\r\n      \"beforeend\",\r\n      \"<button type='button' id='button-enter' class='btn btn-primary' data-bs-toggle='modal' data-bs-target='#exampleModal'>Создать визит</button><input class='btn-exit' type='button' value='Выйти'/>\",\r\n    );\r\n  }\r\n  exit();\r\n  let selector = document.querySelector('[name=\"doctor\"]');\r\n  selector.addEventListener(\r\n    \"change\",\r\n    function (e) {\r\n      additionalForm(this.value);\r\n    },\r\n    false,\r\n  );\r\n  cardObjCreate();\r\n}\r\n\r\n//    Функция генерации дополнительныъ полей ввода в модальном окне после выбора доктора\r\nexport function additionalForm(value) {\r\n  const enterAdd = document.querySelector('[name=\"doctor\"]');\r\n\r\n  let renderForm = \"\";\r\n  const elementsArr = document.querySelectorAll(\".clear\");\r\n\r\n  elementsArr.forEach((elem) => {\r\n    elem.remove();\r\n  });\r\n\r\n  if (value === \"Кардиолог\") {\r\n    renderForm = new FormCardiologist();\r\n  } else if (value === \"Стоматолог\") {\r\n    renderForm = new FormDentist();\r\n  } else if (value === \"Терапевт\") {\r\n    renderForm = new FormTherapist();\r\n  }\r\n  const SiblingsInput = new Form();\r\n  enterAdd.insertAdjacentHTML(\r\n    \"afterend\",\r\n    `${SiblingsInput.render()}${renderForm.render()}`,\r\n  );\r\n  Form.formValid();\r\n}\r\n\r\nexport function exit() {\r\n  const btnExit = document.querySelector(\".btn-exit\");\r\n\r\n  btnExit.addEventListener(\"click\", () => {\r\n    localStorage.removeItem(\"token\");\r\n    location.reload();\r\n  });\r\n}\r\n","import { init } from \"../clasess/modules/Layout\";\r\n\r\ninit();\r\nlet arrayVisitsView = [];\r\n\r\nfunction elementDeleteINArray(array, deleteID) {\r\n  for (let i = array.length - 1; i >= 0; i--) {\r\n    if (array[i].id === deleteID) {\r\n      array.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { arrayVisitsView };\r\nexport { elementDeleteINArray };\r\n"]}